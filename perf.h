/****************************************************************

  Generated by Eclipse Cyclone DDS IDL to C Translator
  File name: perf.h
  Source: perf.idl
  Cyclone DDS: V0.8.0

*****************************************************************/
#ifndef DDSC_PERF_H
#define DDSC_PERF_H

#include "dds/ddsc/dds_public_impl.h"

#ifdef __cplusplus
extern "C" {
#endif

typedef struct performance_timestamp
{
  double sec;
  double nsec;
} performance_timestamp;

extern const dds_topic_descriptor_t performance_timestamp_desc;

#define performance_timestamp__alloc() \
((performance_timestamp*) dds_alloc (sizeof (performance_timestamp)));

#define performance_timestamp_free(d,o) \
dds_sample_free ((d), &performance_timestamp_desc, (o))

#ifndef DDS_SEQUENCE_UINT8_DEFINED
#define DDS_SEQUENCE_UINT8_DEFINED
typedef struct dds_sequence_uint8
{
  uint32_t _maximum;
  uint32_t _length;
  uint8_t *_buffer;
  bool _release;
} dds_sequence_uint8;

#define dds_sequence_uint8__alloc() \
((dds_sequence_uint8*) dds_alloc (sizeof (dds_sequence_uint8)));

#define dds_sequence_uint8_allocbuf(l) \
((uint8_t *) dds_alloc ((l) * sizeof (uint8_t)))
#endif /* DDS_SEQUENCE_UINT8_DEFINED */

typedef struct performance_performance_profile
{
  uint32_t sample_size;
  uint32_t n_samples;
  performance_timestamp t;
  dds_sequence_uint8 buf;
} performance_performance_profile;

extern const dds_topic_descriptor_t performance_performance_profile_desc;

#define performance_performance_profile__alloc() \
((performance_performance_profile*) dds_alloc (sizeof (performance_performance_profile)));

#define performance_performance_profile_free(d,o) \
dds_sample_free ((d), &performance_performance_profile_desc, (o))

#ifdef __cplusplus
}
#endif

#endif /* DDSC_PERF_H */
